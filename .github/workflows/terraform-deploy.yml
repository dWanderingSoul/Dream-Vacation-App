name: Deploy Dream Vacation App

on:
  workflow_dispatch:
  push:
    branches:
      - terraform-deploy

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: ec2
        run: |
          echo "EC2_IP=$(terraform output -raw ec2_public_ip)" 
          echo ${EC2_IP} 
    outputs:
      ec2_ip: ${{ steps.ec2.outputs.ec2_ip }} 
  deploy:
    needs: terraform
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
       # Install netcat
      - name: Install netcat
        run: sudo apt-get update && sudo apt-get install -y netcat-openbsd

    # Wait until SSH is available
      - name: Wait for EC2 SSH
        env:
          EC2_IP: ${{ needs.terraform.outputs.ec2_ip }}
        run: |
          echo "⏳ Waiting for SSH on $EC2_IP:22..."
          for i in {1..30}; do
          if nc -zv $EC2_IP 22; then
            echo "✅ SSH is ready!"
            exit 0
          fi
          echo "Retrying in 10s... ($i/30)"
          sleep 10
          done
          echo "❌ Timeout: SSH not available after 5 minutes"
          exit 1

     
      - name: Sync files to EC2 with rsync
        uses: burnett01/rsync-deployments@5.0
        with:

          switches: -avz --delete
          path: ./
          remote_path: /home/ubuntu/dream-vacation
          remote_host: ${{ secrets.EC2_PUBLIC_IP }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update && sudo apt install -y jq
            cd /home/ubuntu/dream-vacation

            FRONTEND_SHA=$(curl -s "https://hub.docker.com/v2/repositories/aiyus/dream-frontend/tags?page_size=1&page=1&ordering=last_updated" | jq -r '.results[0].name')
            BACKEND_SHA=$(curl -s "https://hub.docker.com/v2/repositories/aiyus/dream-backend/tags?page_size=1&page=1&ordering=last_updated" | jq -r '.results[0].name')

            cat <<EOF > .env
            FRONTEND_TAG=${FRONTEND_SHA}
            BACKEND_TAG=${BACKEND_SHA}
            DB_PORT=${{ secrets.DB_PORT }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            EOF

            docker compose pull
            docker compose up -d --remove-orphans